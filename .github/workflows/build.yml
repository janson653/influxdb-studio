name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# 添加必要的权限
permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
            target: 'universal-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
            target: 'x86_64-unknown-linux-gnu'
          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
            target: 'x86_64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get remove -y libayatana-appindicator3-dev || echo "libayatana-appindicator3-dev not found, skipping removal."
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            build-essential \
            libgtk-3-dev \
            librsvg2-dev \
            libappindicator3-dev \
            patchelf

      - name: Setup environment variables (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          # 设置 pkg-config 路径
          export PKG_CONFIG_PATH="/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig:$PKG_CONFIG_PATH"
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
          
          # 验证环境变量设置
          echo "Current PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          pkg-config --list-all | grep -E "(javascriptcore|webkit)" || echo "No javascriptcore/webkit packages found"

      - name: Install frontend dependencies
        run: pnpm install

      - name: Debug system info (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          echo "=== System Information ==="
          uname -a
          echo "=== Rust Version ==="
          rustc --version
          echo "=== Cargo Version ==="
          cargo --version
          echo "=== Installed Libraries ==="
          dpkg -l | grep -E "(webkit|javascriptcore|gtk)" | head -20
          echo "=== pkg-config Libraries ==="
          pkg-config --list-all | grep -E "(webkit|javascriptcore)" || echo "No webkit/javascriptcore packages found"
          echo "=== Library Search Paths ==="
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          find /usr -name "*.pc" | grep -E "(webkit|javascriptcore)" | head -10 || echo "No .pc files found"

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || '' }}
          releaseName: ${{ startsWith(github.ref, 'refs/tags/') && 'InfluxDB Studio v__VERSION__' || '' }}
          releaseBody: ${{ startsWith(github.ref, 'refs/tags/') && 'See the assets to download and install this version.' || '' }}
          releaseDraft: ${{ startsWith(github.ref, 'refs/tags/') }}
          prerelease: false
          args: ${{ matrix.args }}
          includeUpdaterJson: false 